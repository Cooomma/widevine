// Code generated by protoc-gen-go. DO NOT EDIT.
// source: WidevineCencHeader.proto

/*
Package pssh is a generated protocol buffer package.

It is generated from these files:
	WidevineCencHeader.proto

It has these top-level messages:
	WidevineCencHeader
*/
package pssh

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WidevineCencHeader_Algorithm int32

const (
	WidevineCencHeader_UNENCRYPTED WidevineCencHeader_Algorithm = 0
	WidevineCencHeader_AESCTR      WidevineCencHeader_Algorithm = 1
)

var WidevineCencHeader_Algorithm_name = map[int32]string{
	0: "UNENCRYPTED",
	1: "AESCTR",
}
var WidevineCencHeader_Algorithm_value = map[string]int32{
	"UNENCRYPTED": 0,
	"AESCTR":      1,
}

func (x WidevineCencHeader_Algorithm) Enum() *WidevineCencHeader_Algorithm {
	p := new(WidevineCencHeader_Algorithm)
	*p = x
	return p
}
func (x WidevineCencHeader_Algorithm) String() string {
	return proto.EnumName(WidevineCencHeader_Algorithm_name, int32(x))
}
func (x *WidevineCencHeader_Algorithm) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WidevineCencHeader_Algorithm_value, data, "WidevineCencHeader_Algorithm")
	if err != nil {
		return err
	}
	*x = WidevineCencHeader_Algorithm(value)
	return nil
}
func (WidevineCencHeader_Algorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type WidevineCencHeader struct {
	Algorithm *WidevineCencHeader_Algorithm `protobuf:"varint,1,opt,name=algorithm,enum=pssh.WidevineCencHeader_Algorithm" json:"algorithm,omitempty"`
	KeyId     [][]byte                      `protobuf:"bytes,2,rep,name=key_id,json=keyId" json:"key_id,omitempty"`
	// Content provider name.
	Provider *string `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	// A content identifier, specificed by content provider.
	ContentId []byte `protobuf:"bytes,4,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	// Track type. Acceptable values are SD, HD, and AUDIO. Used to
	// differentiate content keys used by an asset.
	TrackTypeDeprecated *string `protobuf:"bytes,5,opt,name=track_type_deprecated,json=trackTypeDeprecated" json:"track_type_deprecated,omitempty"`
	// The name of a registered policy to be used for this asset.
	Policy *string `protobuf:"bytes,6,opt,name=policy" json:"policy,omitempty"`
	// Crypto period index, for media using key rotation.
	CryptoPeriodIndex *uint32 `protobuf:"varint,7,opt,name=crypto_period_index,json=cryptoPeriodIndex" json:"crypto_period_index,omitempty"`
	// Optional protected context for group content. The grouped_license is a
	// serialized SignedMessage.
	GroupedLicense []byte `protobuf:"bytes,8,opt,name=grouped_license,json=groupedLicense" json:"grouped_license,omitempty"`
	// Protection scheme identifying the encryption algorithm.
	// Represented as one of the following 4CC values:
	// 'cenc' (AES足CTR), 'cbc1' (AES足CBC),
	// 'cens' (AES足CTR subsample), 'cbcs' (AES足CBC subsample).
	ProtectionScheme *uint32 `protobuf:"varint,9,opt,name=protection_scheme,json=protectionScheme" json:"protection_scheme,omitempty"`
	// Optional. For media using key rotation, this represents the duration
	// of each crypto period in seconds.
	CryptoPeriodSeconds *uint32 `protobuf:"varint,10,opt,name=crypto_period_seconds,json=cryptoPeriodSeconds" json:"crypto_period_seconds,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *WidevineCencHeader) Reset()                    { *m = WidevineCencHeader{} }
func (m *WidevineCencHeader) String() string            { return proto.CompactTextString(m) }
func (*WidevineCencHeader) ProtoMessage()               {}
func (*WidevineCencHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WidevineCencHeader) GetAlgorithm() WidevineCencHeader_Algorithm {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return WidevineCencHeader_UNENCRYPTED
}

func (m *WidevineCencHeader) GetKeyId() [][]byte {
	if m != nil {
		return m.KeyId
	}
	return nil
}

func (m *WidevineCencHeader) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *WidevineCencHeader) GetContentId() []byte {
	if m != nil {
		return m.ContentId
	}
	return nil
}

func (m *WidevineCencHeader) GetTrackTypeDeprecated() string {
	if m != nil && m.TrackTypeDeprecated != nil {
		return *m.TrackTypeDeprecated
	}
	return ""
}

func (m *WidevineCencHeader) GetPolicy() string {
	if m != nil && m.Policy != nil {
		return *m.Policy
	}
	return ""
}

func (m *WidevineCencHeader) GetCryptoPeriodIndex() uint32 {
	if m != nil && m.CryptoPeriodIndex != nil {
		return *m.CryptoPeriodIndex
	}
	return 0
}

func (m *WidevineCencHeader) GetGroupedLicense() []byte {
	if m != nil {
		return m.GroupedLicense
	}
	return nil
}

func (m *WidevineCencHeader) GetProtectionScheme() uint32 {
	if m != nil && m.ProtectionScheme != nil {
		return *m.ProtectionScheme
	}
	return 0
}

func (m *WidevineCencHeader) GetCryptoPeriodSeconds() uint32 {
	if m != nil && m.CryptoPeriodSeconds != nil {
		return *m.CryptoPeriodSeconds
	}
	return 0
}

func init() {
	proto.RegisterType((*WidevineCencHeader)(nil), "pssh.WidevineCencHeader")
	proto.RegisterEnum("pssh.WidevineCencHeader_Algorithm", WidevineCencHeader_Algorithm_name, WidevineCencHeader_Algorithm_value)
}

func init() { proto.RegisterFile("WidevineCencHeader.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x5f, 0x6b, 0xf2, 0x30,
	0x18, 0xc5, 0xdf, 0xbe, 0x6a, 0x67, 0x9f, 0x39, 0xff, 0x44, 0x1c, 0x61, 0x30, 0x28, 0xde, 0xac,
	0x30, 0xe8, 0x85, 0x9f, 0x60, 0xa2, 0xc2, 0x84, 0x21, 0x52, 0x1d, 0x63, 0x57, 0xa5, 0x24, 0x0f,
	0x1a, 0xd4, 0x24, 0xa4, 0x99, 0xac, 0xdf, 0x74, 0x1f, 0x67, 0x34, 0x3a, 0xdd, 0xd8, 0x2e, 0x73,
	0x7e, 0xe7, 0x1c, 0x4e, 0x1e, 0xa0, 0x2f, 0x82, 0xe3, 0x5e, 0x48, 0x1c, 0xa1, 0x64, 0x8f, 0x98,
	0x71, 0x34, 0xb1, 0x36, 0xca, 0x2a, 0x52, 0xd5, 0x79, 0xbe, 0xee, 0x7f, 0x54, 0x80, 0xfc, 0xb6,
	0x90, 0x07, 0x08, 0xb2, 0xed, 0x4a, 0x19, 0x61, 0xd7, 0x3b, 0xea, 0x85, 0x5e, 0xd4, 0x1c, 0xf4,
	0xe3, 0x32, 0x10, 0xff, 0xd1, 0x37, 0xfc, 0x72, 0x26, 0xe7, 0x10, 0xe9, 0x81, 0xbf, 0xc1, 0x22,
	0x15, 0x9c, 0xfe, 0x0f, 0x2b, 0x51, 0x23, 0xa9, 0x6d, 0xb0, 0x98, 0x72, 0x72, 0x03, 0x75, 0x6d,
	0xd4, 0x5e, 0x70, 0x34, 0xb4, 0x12, 0x7a, 0x51, 0x90, 0x9c, 0xde, 0xe4, 0x16, 0x80, 0x29, 0x69,
	0x51, 0xda, 0x32, 0x56, 0x0d, 0xbd, 0xa8, 0x91, 0x04, 0x47, 0x65, 0xca, 0xc9, 0x00, 0x7a, 0xd6,
	0x64, 0x6c, 0x93, 0xda, 0x42, 0x63, 0xca, 0x51, 0x1b, 0x64, 0x99, 0x45, 0x4e, 0x6b, 0xae, 0xa7,
	0xeb, 0xe0, 0xb2, 0xd0, 0x38, 0x3e, 0x21, 0x72, 0x0d, 0xbe, 0x56, 0x5b, 0xc1, 0x0a, 0xea, 0x3b,
	0xd3, 0xf1, 0x45, 0x62, 0xe8, 0x32, 0x53, 0x68, 0xab, 0x52, 0x8d, 0x46, 0x28, 0x9e, 0x0a, 0xc9,
	0xf1, 0x9d, 0x5e, 0x84, 0x5e, 0x74, 0x95, 0x74, 0x0e, 0x68, 0xee, 0xc8, 0xb4, 0x04, 0xe4, 0x0e,
	0x5a, 0x2b, 0xa3, 0xde, 0x34, 0xf2, 0x74, 0x2b, 0x18, 0xca, 0x1c, 0x69, 0xdd, 0xed, 0x6b, 0x1e,
	0xe5, 0xa7, 0x83, 0x4a, 0xee, 0xa1, 0x53, 0x9e, 0x17, 0x99, 0x15, 0x4a, 0xa6, 0x39, 0x5b, 0xe3,
	0x0e, 0x69, 0xe0, 0x6a, 0xdb, 0x67, 0xb0, 0x70, 0x7a, 0xf9, 0xa3, 0x9f, 0x2b, 0x72, 0x64, 0x4a,
	0xf2, 0x9c, 0x82, 0x0b, 0x74, 0xbf, 0xef, 0x58, 0x1c, 0x50, 0x3f, 0x82, 0xe0, 0x74, 0x6f, 0xd2,
	0x82, 0xcb, 0xe7, 0xd9, 0x64, 0x36, 0x4a, 0x5e, 0xe7, 0xcb, 0xc9, 0xb8, 0xfd, 0x8f, 0x00, 0xf8,
	0xc3, 0xc9, 0x62, 0xb4, 0x4c, 0xda, 0xde, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x1c, 0x16,
	0xba, 0xfb, 0x01, 0x00, 0x00,
}
